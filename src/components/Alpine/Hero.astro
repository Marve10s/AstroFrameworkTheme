---
---

<script>
  import Alpine from 'alpinejs';
  window.Alpine = Alpine;
  Alpine.start();
</script>

<style>
  @keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
  }
  .float-animation {
    animation: float 10s ease-in-out infinite;
  }
</style>

<section class=" mt-32">
  <div class="container mx-auto px-4">
    <div 
      x-data 
      x-init="$nextTick(() => { $el.classList.add('opacity-100', 'translate-y-0') })"
      class="text-center mb-16 opacity-0 translate-y-4 transition-all duration-700"
    >
      <h1 class="text-4xl md:text-6xl font-bold text-white mb-8 bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-blue-600">
        Alpine.js + Astro = <span class="text-blue-400">Simplicity</span>
      </h1>
      <p class="text-xl text-blue-200/80 max-w-2xl mx-auto mb-8">
        Experience the power of Alpine.js with Astro - A lightweight JavaScript framework for building interactive components
      </p>
      <div class="flex gap-4 justify-center mb-16">
        <a 
          href="https://docs.astro.build/en/guides/integrations-guide/alpinejs/" 
          target="_blank"
          class="group px-6 py-3 bg-blue-600/20 hover:bg-blue-600/30 text-blue-400 rounded-lg transition-all duration-200 hover:scale-105 border border-blue-500/20 flex items-center gap-2"
        >
          <svg class="w-5 h-5 transition-transform group-hover:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
          </svg>
          Documentation
        </a>
        
      </div>

      <!-- Feature Grid -->
      <div class="grid md:grid-cols-3 gap-6 max-w-5xl mx-auto mb-20">
        <div class="p-6 rounded-lg bg-gray-800/50 border border-blue-500/20">
          <svg class="w-10 h-10 text-blue-400 mb-4 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
          </svg>
          <h3 class="text-xl font-semibold text-blue-400 mb-2">Lightweight</h3>
          <p class="text-gray-400">Only ~14kb minified, no dependencies required</p>
        </div>
        <div class="p-6 rounded-lg bg-gray-800/50 border border-blue-500/20">
          <svg class="w-10 h-10 text-blue-400 mb-4 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z" />
          </svg>
          <h3 class="text-xl font-semibold text-blue-400 mb-2">Component-Based</h3>
          <p class="text-gray-400">Build complex UIs with simple components</p>
        </div>
        <div class="p-6 rounded-lg bg-gray-800/50 border border-blue-500/20">
          <svg class="w-10 h-10 text-blue-400 mb-4 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          <h3 class="text-xl font-semibold text-blue-400 mb-2">Simple Syntax</h3>
          <p class="text-gray-400">Intuitive directives for rapid development</p>
        </div>
      </div>
    </div>

    <h2 class="text-3xl font-bold text-center text-white mb-12">Interactive Examples</h2>

    <div class="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
      <!-- Counter Component -->
      <div 
        x-data 
        x-init="$nextTick(() => { $el.classList.add('opacity-100', 'translate-y-0') })"
        class="p-8 rounded-xl bg-gray-800/50 border border-blue-500/20 backdrop-blur-sm hover:shadow-lg hover:shadow-blue-500/5 transition-all duration-500 opacity-0 translate-y-4 float-animation"
      >
        <h3 class="text-2xl font-semibold text-blue-400 mb-6 flex items-center gap-2">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
          </svg>
          Counter
        </h3>
        <div x-data="{ 
          count: parseInt(localStorage.getItem('alpine-counter')) || 0,
          updateCount(value) {
            this.count = value;
            localStorage.setItem('alpine-counter', this.count);
          }
        }" class="text-center">
          <div class="text-6xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-blue-600 mb-8" x-text="count"></div>
          <div class="flex gap-4 justify-center">
            <button 
              @click="updateCount(count - 1)" 
              class="group px-6 py-3 bg-blue-600/20 hover:bg-blue-600/30 text-blue-400 rounded-lg transition-all duration-200 hover:scale-105 flex items-center gap-2"
            >
              <svg class="w-5 h-5 transition-transform group-hover:-translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
              </svg>
              Decrease
            </button>
            <button 
              @click="updateCount(count + 1)" 
              class="group px-6 py-3 bg-blue-600/20 hover:bg-blue-600/30 text-blue-400 rounded-lg transition-all duration-200 hover:scale-105 flex items-center gap-2"
            >
              Increase
              <svg class="w-5 h-5 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
              </svg>
            </button>
          </div>
        </div>
      </div>

      <!-- Todo List Component -->
      <div 
        x-data 
        x-init="$nextTick(() => { $el.classList.add('opacity-100', 'translate-y-0') })"
        class="p-8 rounded-xl bg-gray-800/50 border border-blue-500/20 backdrop-blur-sm hover:shadow-lg hover:shadow-blue-500/5 transition-all duration-500 opacity-0 translate-y-4 float-animation delay-200"
      >
        <h3 class="text-2xl font-semibold text-blue-400 mb-6 flex items-center gap-2">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
          </svg>
          Todo List
        </h3>
        <div x-data="{ 
          todos: JSON.parse(localStorage.getItem('alpine-todos')) || [],
          newTodo: '',
          updateStorage() {
            localStorage.setItem('alpine-todos', JSON.stringify(this.todos));
          },
          addTodo() {
            if (this.newTodo.trim()) {
              this.todos.push({
                text: this.newTodo,
                completed: false
              });
              this.newTodo = '';
              this.updateStorage();
            }
          },
          toggleTodo(index) {
            this.todos[index].completed = !this.todos[index].completed;
            this.updateStorage();
          },
          removeTodo(index) {
            this.todos.splice(index, 1);
            this.updateStorage();
          }
        }" x-init="$watch('todos', () => updateStorage())">
          <div class="flex gap-2 mb-6">
            <input 
              type="text" 
              x-model="newTodo" 
              @keyup.enter="addTodo()"
              placeholder="Add a new todo..."
              class="flex-1 px-4 py-3 bg-gray-700/50 rounded-lg border border-blue-500/20 text-white placeholder-gray-400 focus:outline-none focus:border-blue-500/50 focus:ring-2 focus:ring-blue-500/20 transition-all duration-200"
            >
            <button 
              @click="addTodo()"
              class="group px-4 py-3 bg-blue-600/20 hover:bg-blue-600/30 text-blue-400 rounded-lg transition-all duration-200 hover:scale-105 flex items-center gap-2"
            >
              Add
              <svg class="w-5 h-5 transition-transform group-hover:rotate-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
              </svg>
            </button>
          </div>
          <ul class="space-y-3 max-h-[300px] overflow-y-auto custom-scrollbar">
            <template x-for="(todo, index) in todos" :key="index">
              <li 
                x-show="true"
                x-transition:enter="transition ease-out duration-200"
                x-transition:enter-start="opacity-0 transform scale-95"
                x-transition:enter-end="opacity-100 transform scale-100"
                x-transition:leave="transition ease-in duration-100"
                x-transition:leave-start="opacity-100 transform scale-100"
                x-transition:leave-end="opacity-0 transform scale-95"
                class="flex items-center gap-3 p-3 rounded-lg bg-gray-700/30 border border-blue-500/10 group"
              >
                <input 
                  type="checkbox"
                  :checked="todo.completed"
                  @click="toggleTodo(index)"
                  class="w-5 h-5 rounded-md border-gray-600 text-blue-500 focus:ring-blue-500 bg-gray-700/50"
                >
                <span 
                  x-text="todo.text"
                  :class="{ 'line-through text-gray-500': todo.completed }"
                  class="text-white transition-colors duration-200"
                ></span>
                <button 
                  @click="removeTodo(index)"
                  class="ml-auto p-2 text-red-400 hover:text-red-300 rounded-lg opacity-0 group-hover:opacity-100 transition-all duration-200 hover:bg-red-400/10"
                >
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                  </svg>
                </button>
              </li>
            </template>
          </ul>
        </div>
      </div>
    </div>
  </div>
</section>